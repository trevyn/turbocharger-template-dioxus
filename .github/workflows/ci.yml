name: ci

on:
  push:
  pull_request:
  schedule: [cron: "40 1 * * *"]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  assign:
    name: assign build_id
    runs-on: ubuntu-latest

    steps:
      - run: wget https://github.com/trevyn/animal-time/releases/latest/download/animal-time
      - run: chmod +x animal-time
      - run: ./animal-time > build_id
      - run: cat build_id

      - uses: actions/upload-artifact@v3
        with:
          name: build_id
          path: build_id

  checklinks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: trevyn/lychee-action@v1
        id: lychee
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ./**/*.* --verbose --no-progress --exclude-all-private --base="http://127.0.0.1" --headers="accept=text/html" --scheme=http --scheme=https

  test:
    needs: [assign]
    name: test rust ${{ matrix.rust }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [stable, beta, nightly]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: build_id

      - run: cat build_id

      - run: echo "BUILD_ID=$(cat build_id)" >> $GITHUB_ENV
      - run: echo "BUILD_ADJECTIVE=$(cat build_id | cut -d- -f1)" >> $GITHUB_ENV

      - run: rustup default ${{ matrix.rust }} && rustup update ${{ matrix.rust }}
      - run: rustup target add wasm32-unknown-unknown

      - run: cargo install --config net.retry=10 --git https://github.com/DioxusLabs/cli --rev 286d7691

      # - run: |
      #     wget --no-verbose https://github.com/rustwasm/wasm-bindgen/releases/download/0.2.84/wasm-bindgen-0.2.84-x86_64-unknown-linux-musl.tar.gz
      #     tar xvf wasm-bindgen-0.2.84-x86_64-unknown-linux-musl.tar.gz
      #     wget --no-verbose https://github.com/WebAssembly/binaryen/releases/download/version_112/binaryen-version_112-x86_64-linux.tar.gz
      #     tar xvf binaryen-version_112-x86_64-linux.tar.gz

      - run: npm install
      - run: npx audit-ci --low

      - run: dioxus build --features wasm

      # - run: cargo build --lib --release --features wasm --target wasm32-unknown-unknown
      # - run: wasm-bindgen-0.2.84-x86_64-unknown-linux-musl/wasm-bindgen --out-dir src-frontend/turbocharger_generated --out-name index --target web target/wasm32-unknown-unknown/release/turbocharger_generated.wasm
      # - run: binaryen-version_112/bin/wasm-opt src-frontend/turbocharger_generated/index_bg.wasm -o src-frontend/turbocharger_generated/index_bg.wasm -Oz

      - run: npx vite build
      - run: rm -rf src-frontend/dist/assets
      - run: brotli index.html
        working-directory: "src-frontend/dist"
      - run: ls -la src-frontend/dist
      - run: RUSTFLAGS="-Ctarget-cpu=nehalem" cargo build --bin turbocharger-template-dioxus --release --target x86_64-unknown-linux-gnu
