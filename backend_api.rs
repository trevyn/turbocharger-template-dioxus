// This file is auto-generated by Turbocharger.
// Check it into version control to track API changes over time.
// To regenerate: "cargo clean && rm backend_api.rs && cargo check"

async fn _admin_auth(password: String) -> Result<(), tracked::StringError> {}

async fn _admin_delete_person(rowid: i64) -> Result<usize, tracked::StringError> {}

async fn _admin_get_person(rowid: i64) -> Result<Person, tracked::StringError> {}

async fn _admin_insert_person() -> Result<i64, tracked::StringError> {}

async fn _admin_list_person() -> Result<Vec<i64>, tracked::StringError> {}

async fn admin_auth(password: String) -> Result<(), tracked::StringError> {}

async fn admin_delete_person(rowid: i64) -> Result<usize, tracked::StringError> {}

async fn admin_insert_person() -> Result<i64, tracked::StringError> {}

async fn get_connection_info() -> String {}

async fn get_connection_local_number() -> i64 {}

async fn get_person(rowid: i64) -> Result<Person, tracked::StringError> {}

async fn insert_person() -> Result<i64, tracked::StringError> {}

async fn mail(rowid: i64) -> Result<Person, tracked::StringError> {}

struct Person {
    rowid: Option<i64>,
    name: Option<String>,
}

fn stream() -> impl Stream<Item = String> {}

fn stream_example() -> impl Stream<Item = String> {}

fn stream_example_result() -> impl Stream<Item = Result<String, tracked::StringError>> {}

fn stream_result() -> impl Stream<Item = Result<String, tracked::StringError>> {}

async fn turbosqladmin_list_person() -> Result<Vec<i64>, tracked::StringError> {}

async fn turbosqladmin_person(rowid: i64) -> Result<Person, tracked::StringError> {}
